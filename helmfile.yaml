environments:
  development:
    values:
      - environments/common.yaml
    secrets:
      - environments/development/secrets/postgresql.yaml

---

repositories:
  - name: hashicorp
    url: https://helm.releases.hashicorp.com 
  - name: bitnami 
    url: https://charts.bitnami.com/bitnami
  - name: stakater 
    url: https://stakater.github.io/stakater-charts 
  - name: metrics-server
    url: https://kubernetes-sigs.github.io/metrics-server

helmDefaults:
  atomic: true
  cascade: background
  cleanupOnFail: false
  createNamespace: false
  devel: false
  force: false
  historyMax: 10
  kubeContext: vin-{{ .Environment.Name }}
  recreatePods: false
  skipDeps: false
  timeout: 30
  wait: true
  waitForJobs: false  

releases:
# -------------------- DevOps Common configuration -----------------------------
  - name: devops
    # installed: false
    chart: ./charts/devops
    namespace: core
    createNamespace: true
    labels:
      tier: core
      app: devops
    values:
      - db:
          host: {{ .Values.postgresql.host }}
          port: {{ .Values.postgresql.port }}
          username: {{ .Values.postgresql.username }}
          password: {{ .Values.postgresql.masterPassword }}
        namespaces:
          - backend
          - database
          - frontend

# -------------------- Metrics Server ------------------------------------------
  - name: metrics-server
    # installed: false
    chart: metrics-server/metrics-server
    namespace: core
    timeout: 300
    labels:
      tier: core
      app: metrics-server
    needs:
      - core/devops
    values:
      - args: 
        - "--kubelet-insecure-tls"

# -------------------- Hashicorp Vault  ----------------------------------------
  - name: vault
    # installed: false
    chart: hashicorp/vault
    version: 0.29.1
    namespace: vault
    createNamespace: true
    timeout: 300
    labels:
      tier: core
      app: vault
    needs:
      - core/devops
    values:
      - environments/{{ .Environment.Name }}/vault.yaml

  - name: vault-operator
    # installed: false
    chart: hashicorp/vault-secrets-operator
    version: 0.9.1
    namespace: vault
    timeout: 300
    labels:
      tier: core
      app: vault
    values:
      - environments/{{ .Environment.Name }}/vault-operator.yaml
    needs:
      - vault/vault

# -------------------- Reloader  -----------------------------------------------
  - name: reloader
    # installed: false
    chart: stakater/reloader
    timeout: 180
    namespace: core
    labels:
      tier: core
      app: reloader
    needs:
      - core/devops

# -------------------- Postgresql ----------------------------------------------
  - name: postgresql
    # installed: false
    chart: bitnami/postgresql
    version: 16.4.5
    namespace: database
    labels:
      tier: core
      app: postgresql
    timeout: 300
    needs:
      - core/devops
    values:
      - volumePermissions:
          enabled: true
        passwordUpdateJob:
          enabled: false
        primary:
          networkPolicy:
            allowExternal: true
        #     ingressNSMatchLabels:
        #       kubernetes.io/metadata.name: backend
        auth:
          postgresPassword: {{ .Values.postgresql.masterPassword }}
          audit:
            logConnections: true 

# -------------------- Applications releases  ----------------------------------
# -------------------- Application app1  ---------------------------------------
  - name: app1-back
    # installed: false
    chart: ./charts/backend
    namespace: backend
    labels:
      tier: apps
      app: app1
    needs: 
      - core/devops
    values:
      - environments/{{ .Environment.Name }}/backend.yaml
      - name: app1
        secrets:
          managedBy: vault
        autoRollback: true

  - name: app1-front
    # installed: false
    chart: ./charts/frontend
    namespace: frontend
    labels:
      tier: apps
      app: app1
    needs:
      - backend/app1-back
    values:
      - environments/{{ .Environment.Name }}/frontend.yaml
      - name: app1
        backend:
          host: "app1-back.backend.svc.cluster.local:80"
        ingress:
          host: "app1-front.vin-{{ .Environment.Name }}.minikube"
          adminWhitelist: "192.168.0.0/16"

# -------------------- Application app2  ---------------------------------------

  - name: app2-back
    # installed: false
    chart: ./charts/backend
    namespace: backend
    labels:
      tier: apps
      app: app2
    needs: 
      - core/devops
    values:
      - environments/{{ .Environment.Name }}/backend.yaml
      - name: app2
        secrets:
          managedBy: sops
        autoscaling: 
          enabled: true
          minReplicas: 3

  - name: app2-front
    # installed: false
    chart: ./charts/frontend
    namespace: frontend
    labels:
      tier: apps
      app: app2
    needs:
      - backend/app2-back
    values:
      - environments/{{ .Environment.Name }}/frontend.yaml
      - name: app2
        backend:
          host: "app2-back.backend.svc.cluster.local:80"
        ingress:
          host: "app2-front.vin-{{ .Environment.Name }}.minikube"
          adminWhitelist: "192.168.0.0/16"


